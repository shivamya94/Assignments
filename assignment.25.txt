Assignment - 25 A Job Ready Bootcamp in C++, DSA and IOT MySirG

Classes and Objects

1. Define a class Complex to represent a complex number. Declare instance member
variables to store real and imaginary part of a complex number, also define instance
member functions to set values of complex number and print values of complex
number.
ans:-
#include<iostream>
using namespace std;

class complex
{
private :
    int a,b;
public:
    void setData(int x,int y)
    {
      a=x;
      b=y;

    }
    void showData()
    {
        cout<<"real= "<<a<<"imag= "<<b<<endl;

    }

};
int main()
{
    complex c1,c2;
    c1.setData(4,7);
    c2.setData(8,9);
    c1.showData();
    c2.showData();
    cout<<endl;
}

2. Define a class Time to represent Time (like 3 hr 45 min 20 sec). Declare appropriate
number of instance member variables and also define instance member functions to
set values for time and display values of time.


3. Define a class Factorial and define an instance member function to find the Factorial
of a number using class.
ans:
#include<iostream>
using namespace std;

class Factorial
{
    private:

       int fact;
       int n;

    public:

       void setN(int x)
       {
         n = x;
       }
       int getN()
       {
         return n;
       }
       int getFactorial()
       {
         return fact;
       }
        int calculateFactorial()
        {
          int f=1,i;

          if(n<=0)
        {
            fact =1;
            return 0;
        }
        for(i=1 ; i<=n; i++)
        {
            f=f*i;
        }
        fact=f;
    }
};
int main()
{
    Factorial f;
    f.setN(8);
    f.calculateFactorial();
    cout<<"Factorial of"<<f.getN()<<" is "<<f.getFactorial();
    return 0;
}

4. Define a class LargestNumber and define an instance member function to find the
Largest of three Numbers using the class.
#include <stdio.h>

typedef struct {
    int a;
    int b;
    int c;
} LargestNumber;

int findLargest(LargestNumber* ln) {
    int largest = ln->a; 

    if (ln->b > largest) {
        largest = ln->b;
    }
    if (ln->c > largest) {
        largest = ln->c;
    }

    return largest;
}

int main() {
    LargestNumber ln;

    printf("Enter three numbers:\n");
    scanf("%d %d %d", &ln.a, &ln.b, &ln.c);

    printf("The largest number is: %d\n", findLargest(&ln));

    return 0;
}


5. Define a class ReverseNumber and define an instance member function to find
Reverse of a Number using class.
#include <iostream>
using namespace std;

class ReverseNumber {
private:
    int number;

public:
    // Constructor to initialize the number
    ReverseNumber(int num) {
        number = num;
    }

    // Function to reverse the number
    int reverse() {
        int reversedNumber = 0;
        int temp = number;

        while (temp > 0) {
            int digit = temp % 10;
            reversedNumber = reversedNumber * 10 + digit;
            temp /= 10;
        }

        return reversedNumber;
    }
};

int main() {
    int num;
    cout << "Enter a number: ";
    cin >> num;

    // Create an instance of ReverseNumber
    ReverseNumber reverseNum(num);

    // Call the reverse function
    int result = reverseNum.reverse();

    cout << "Reversed Number: " << result << endl;

    return 0;
}


6. Define a class Square to find the square of a number and write a C++ program to
Count number of times a function is called.
#include <iostream>

class Square {
private:
    static int count; // Static variable to keep track of function calls

public:
    // Function to find the square of a number
    int findSquare(int num) {
        count++; // Increment the count each time the function is called
        return num * num;
    }

    // Static function to get the count of function calls
    static int getCount() {
        return count;
    }
};

// Initialize the static member variable
int Square::count = 0;

int main() {
    Square squareObj;

    int number;
    std::cout << "Enter a number: ";
    std::cin >> number;

    int result = squareObj.findSquare(number);
    std::cout << "Square of " << number << " is: " << result << std::endl;

    // Call the square function multiple times to see the count
    squareObj.findSquare(3);
    squareObj.findSquare(4);
    squareObj.findSquare(5);

    std::cout << "The square function was called " << Square::getCount() << " times." << std::endl;

    return 0;
}




7. Define a class Greatest and define instance member function to find Largest among
3 numbers using classes.
#include <iostream>

class Greatest {
public:
    // Member function to find the largest among three numbers
    int findLargest(int num1, int num2, int num3) {
        if (num1 >= num2 && num1 >= num3) {
            return num1;
        } else if (num2 >= num1 && num2 >= num3) {
            return num2;
        } else {
            return num3;
        }
    }
};

int main() {
    Greatest greatestObj;

    int number1, number2, number3;
    std::cout << "Enter three numbers: ";
    std::cin >> number1 >> number2 >> number3;

    int largest = greatestObj.findLargest(number1, number2, number3);
    std::cout << "The largest among " << number1 << ", " << number2 << ", and " << number3 << " is: " << largest << std::endl;

    return 0;
}



8. Define a class Rectangle and define an instance member function to find the area of
the rectangle.
#include <iostream>

class Rectangle {
private:
    // Member variables to store the length and width of the rectangle
    double length;
    double width;

public:
    // Constructor to initialize length and width
    Rectangle(double l, double w) : length(l), width(w) {}

    // Member function to find the area of the rectangle
    double findArea() {
        return length * width;
    }
};

int main() {
    double length, width;
    std::cout << "Enter the length of the rectangle: ";
    std::cin >> length;
    std::cout << "Enter the width of the rectangle: ";
    std::cin >> width;

    // Create an object of the Rectangle class and pass length and width to the constructor
    Rectangle rect(length, width);

    // Calculate and display the area
    double area = rect.findArea();
    std::cout << "The area of the rectangle is: " << area << std::endl;

    return 0;
}



9. Define a class Circle and define an instance member function to find the area of the
circle.
10. Define a class Area and define instance member functions to find the area of the
different shapes like square, rectangle , circle etc.
Ans:
/* Define a class Area and define instance member functions to find the area of the
different shapes like square, rectangle , circle etc.8*/
#include<iostream>
using namespace std;

class Area
{
     private:
        float side,length,breath,radius;
     public:
         void setSide(float a)
         {
             side=a;
         }
         void setLengthBreath(float l,float b)
         {
             length = l;
             breath = b;
         }
         void setRadius(float r)
         {
             radius = r;
         }

        float areaofSquare()
        {
            return side*side;
        }

        float areaofRectangle()
        {
            return length*breath;
        }

        float areaofCircle()
        {
            return 3.14*radius*radius;
        }

};
int main()
{
    Area a;
    a.setSide(5);
    a.setLengthBreath(3,6);
    a.setRadius(6);

    cout<<"Area of Square is"<<a.areaofSquare()<<endl;
    cout<<"Area of Rectangle is"<<a.areaofRectangle()<<endl;
    cout<<"Area of Circle is"<<a.areaofCircle()<<endl;

    return 0;

}
