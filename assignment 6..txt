Assignment - 6 A Job Ready Bootcamp in C++, DSA and IOT MySirG

Use any loop

1. Write a program to calculate sum of first N natural numbers.
#include <stdio.h>

int main() {
    int N, sum = 0;

    printf("Enter a positive integer: ");
    scanf("%d", &N);

    for (int i = 1; i <= N; i++) {
        sum += i;
    }

    printf("The sum of the first %d natural numbers is: %d\n", N, sum);

    return 0;
}


2. Write a program to calculate sum of first N even natural numbers.
#include <stdio.h>

int main() {
    int N, sum = 0;

    printf("Enter a positive integer: ");
    scanf("%d", &N);

    for (int i = 1; i <= N; i++) {
        sum += 2 * i;  // Add the i-th even number (2, 4, 6, ...)
    }

    printf("The sum of the first %d even natural numbers is: %d\n", N, sum);

    return 0;
}

3. Write a program to calculate sum of first N odd natural numbers.
#include <stdio.h>

int main() {
    int N, sum = 0;

    printf("Enter a positive integer: ");
    scanf("%d", &N);

    for (int i = 1; i <= N; i++) {
        sum += 2 * i - 1; 
    }

    printf("The sum of the first %d odd natural numbers is: %d\n", N, sum);

    return 0;
}


4. Write a program to calculate sum of squares of first N natural numbers.
#include <stdio.h>

int main() {
    int N, sum = 0;

    printf("Enter a positive integer: ");
    scanf("%d", &N);

    for (int i = 1; i <= N; i++) {
        sum += i * i;  // Add the square of i to sum
    }

    printf("The sum of the squares of the first %d natural numbers is: %d\n", N, sum);

    return 0;
}

5. Write a program to calculate sum of cubes of first N natural numbers
#include <stdio.h>

int main() {
    int N, sum = 0;

    printf("Enter a positive integer: ");
    scanf("%d", &N);

    for (int i = 1; i <= N; i++) {
        sum += i * i * i;  // Add the cube of i to sum
    }

    printf("The sum of the cubes of the first %d natural numbers is: %d\n", N, sum);

    return 0;
}

6. Write a program to calculate factorial of a number
#include <stdio.h>

int main() {
    int n;
    unsigned long long factorial = 1;  

    printf("Enter a positive integer: ");
    scanf("%d", &n);

    if (n < 0) {
        printf("Factorial of a negative number doesn't exist.\n");
    } else {
        for (int i = 1; i <= n; i++) {
            factorial *= i;
        }

        printf("Factorial of %d = %llu\n", n, factorial);
    }

    return 0;
}

7. Write a program to count digits in a given number.

#include <stdio.h>
#include <math.h>

int main() {
    int number, digit_count = 0;

    printf("Enter an integer: ");
    scanf("%d", &number);

    number = abs(number);

    if (number == 0) {
        digit_count = 1;
    } else {
        while (number > 0) {
            number /= 10;  
            digit_count++; 
        }
    }

    printf("The number of digits is: %d\n", digit_count);

    return 0;
}

8. Write a program to check whether a given number is a Prime number or not
#include <stdio.h>
#include <stdbool.h>

bool isPrime(int number) {
    if (number <= 1) return false; 
    if (number <= 3) return true; 

    if (number % 2 == 0 || number % 3 == 0) return false;

    for (int i = 5; i * i <= number; i += 6) {
        if (number % i == 0 || number % (i + 2) == 0) return false;
    }

    return true;
}

int main() {
    int number;

    printf("Enter an integer: ");
    scanf("%d", &number);

    if (isPrime(number)) {
        printf("%d is a prime number.\n", number);
    } else {
        printf("%d is not a prime number.\n", number);
    }

    return 0;
}

9. Write a program to calculate LCM of two numbers
#include <stdio.h>

int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

int lcm(int a, int b) {
    return (a * b) / gcd(a, b);
}

int main() {
    int num1, num2;

    printf("Enter two numbers: ");
    scanf("%d %d", &num1, &num2);

    printf("LCM of %d and %d is %d\n", num1, num2, lcm(num1, num2));

    return 0;
}


10. Write a program to reverse a given number
#include <stdio.h>

int reverseNumber(int num) {
    int reversed = 0;
    while (num != 0) {
        int digit = num % 10;  // Extract the last digit
        reversed = reversed * 10 + digit;  // Append digit to the reversed number
        num /= 10;  // Remove the last digit from num
    }
    return reversed;
}

int main() {
    int number;

    printf("Enter an integer: ");
    scanf("%d", &number);

    printf("Reversed number: %d\n", reverseNumber(number));

    return 0;
}
