Assignment - 35 A Job Ready Bootcamp in C++, DSA and IOT

Templates

1. Write a C++ program to demonstrate the addition of multiple types of data using
generic functions or templates.
Ans:-

#include<iostream>
using namespace std;

template<class T>
T addition (T num1,T num2)
{
    return (num1 / num2);
}
int main()
{
    cout<<"\n Addition of multiple type of data using generic template";
    cout<<"\n---------------------------------------------------------";
    cout<<"\n An addition of integer parameters : " <<addition<int>(10,10);
    //Data is passed as integer
    cout<<"\n An addition of float parameters : "<<addition<float>(15.7,8);
    //Data is passed as integer

    return 0;
}



2. Write a C++ Program to find Largest among two numbers using function template.
Ans:-
#include<iostream>
using namespace std;

template<class T>

T large(T num1, T num2)
{
    return(num1>num2) ? num1 : num2;
}

int main()
{
    int i1,i2;
    float f1,f2;
    char c1,c2;

    cout<<" Enter two integer \n";
    cin>>i1>>i2;
    cout<<large<int>(i1,i2) <<"is larger." <<endl;

    cout<<"\nEnter two float number\n";
    cin>>f1>>f2;
    cout<<large<float>(f1,f2) <<"is larger."<<endl;

    cout<<"\nEnter two character\n";
    cin>>c1,c2;
    cout<<large<char>(c1,c2) <<"has larger ASCII value.";

    return 0;


}


3. Write a C++ program to find the largest of three elements using a template.
Ans:-#include <iostream>
using namespace std;

// Template function to find the largest of three elements
template <typename T>
T findLargest(T a, T b, T c) {
    T max = a;  // Assume a is the largest

    if (b > max) {
        max = b;  // Update max if b is larger
    }
    if (c > max) {
        max = c;  // Update max if c is larger
    }

    return max;
}

int main() {
    // Test with integers
    int x = 10, y = 20, z = 15;
    cout << "Largest among " << x << ", " << y << ", and " << z << " is " << findLargest(x, y, z) << endl;

    // Test with floating-point numbers
    double p = 10.5, q = 20.5, r = 15.5;
    cout << "Largest among " << p << ", " << q << ", and " << r << " is " << findLargest(p, q, r) << endl;

    // Test with characters
    char a = 'A', b = 'Z', c = 'M';
    cout << "Largest among " << a << ", " << b << ", and " << c << " is " << findLargest(a, b, c) << endl;

    return 0;
}


4. Write a C++ Program to Swap data using function template.
#include <iostream>
using namespace std;

// Function template to swap two variables
template <typename T>
void swapData(T &a, T &b) {
    T temp = a;
    a = b;
    b = temp;
}

int main() {
    int x = 10, y = 20;
    cout << "Before swapping: " << "x = " << x << ", y = " << y << endl;
    
    // Swapping integers
    swapData(x, y);
    cout << "After swapping: " << "x = " << x << ", y = " << y << endl;

    double m = 1.1, n = 2.2;
    cout << "\nBefore swapping: " << "m = " << m << ", n = " << n << endl;
    
    // Swapping doubles
    swapData(m, n);
    cout << "After swapping: " << "m = " << m << ", n = " << n << endl;

    char c1 = 'A', c2 = 'B';
    cout << "\nBefore swapping: " << "c1 = " << c1 << ", c2 = " << c2 << endl;
    
    // Swapping characters
    swapData(c1, c2);
    cout << "After swapping: " << "c1 = " << c1 << ", c2 = " << c2 << endl;

    return 0;
}


5. Write a C++ Program to Add two numbers using function template.
#include <iostream>
using namespace std;

// Function template to add two numbers
template <typename T>
T add(T a, T b) {
    return a + b;
}

int main() {
    int x = 5, y = 10;
    cout << "Sum of integers: " << add(x, y) << endl;

    double m = 2.5, n = 4.5;
    cout << "Sum of doubles: " << add(m, n) << endl;

    float p = 3.2f, q = 1.8f;
    cout << "Sum of floats: " << add(p, q) << endl;

    return 0;
}

6. Write a C++ Program to find Sum of Array using function template.
#include <iostream>
using namespace std;

// Function template to calculate the sum of an array
template <typename T>
T arraySum(T arr[], int size) {
    T sum = 0;
    for(int i = 0; i < size; i++) {
        sum += arr[i];
    }
    return sum;
}

int main() {
    int intArr[] = {1, 2, 3, 4, 5};
    int intSize = sizeof(intArr) / sizeof(intArr[0]);
    cout << "Sum of integer array: " << arraySum(intArr, intSize) << endl;

    double doubleArr[] = {1.1, 2.2, 3.3, 4.4, 5.5};
    int doubleSize = sizeof(doubleArr) / sizeof(doubleArr[0]);
    cout << "Sum of double array: " << arraySum(doubleArr, doubleSize) << endl;

    float floatArr[] = {1.5f, 2.5f, 3.5f, 4.5f, 5.5f};
    int floatSize = sizeof(floatArr) / sizeof(floatArr[0]);
    cout << "Sum of float array: " << arraySum(floatArr, floatSize) << endl;

    return 0;
}

7. Write a C++ Program of Templated class derived from Non-templated class.
8. Write a C++ Program to implement push and pop methods from stack using
template.
9. Write a C++ Program to Perform Simple Addition Function Using Templates.
10. Write a C++ program to implement Hash Table using Template Class.